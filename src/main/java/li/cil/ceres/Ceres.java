package li.cil.ceres;

import li.cil.ceres.api.Serializer;
import li.cil.ceres.serializers.UUIDSerializer;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

public final class Ceres {
    private static final Map<Class<?>, Serializer<?>> SERIALIZERS = new HashMap<>();

    static {
        putSerializer(UUID.class, new UUIDSerializer());
    }

    @SuppressWarnings("unchecked")
    public static <T> Serializer<T> getSerializer(final Class<T> type) {
        return (Serializer<T>) SERIALIZERS.computeIfAbsent(type, Ceres::generateSerializer);
    }

    public static <T> void putSerializer(final Class<T> type, final Serializer<T> serializer) {
        SERIALIZERS.put(type, serializer);
    }

    private static Serializer<?> generateSerializer(final Class<?> type) {
        // TODO Bake serialization for types (field iteration) into generated bytecode.
        return ReflectionSerializer.INSTANCE;
    }
}
